// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  username String @id @unique
  password String
}

model Proposal {
  id                     Int      @id @default(autoincrement())
  category               String
  eventTitle             String
  convenorName           String?
  convenorDesignation    String?
  mailId                 String?
  mobileNumber           String?
  proposedPeriod         String?
  duration               String?
  financialSupportOthers String?
  financialSupportSRMIST String?
  estimatedBudget        String?
  startDate              String?
  endDate                String?
  status                 Boolean?
  createdAt              DateTime @default(now())
}

model CallForProposal {
  id                String   @id @default(uuid())
  department        String
  brandTitle        String
  duration          String
  eventDate         DateTime
  convener          String
  designation       String
  totalExpenditure  Float
  sponsorshipDetails String?
  pastEventsDetails String?
  otherDetails      String?
  yourName          String
  yourEmail         String
  active            Boolean @default(false)
  rejected          Boolean @default(false)

  fundFromUniversity   Float
  fundFromRegistration Float
  fundFromSponsorship  Float
  fundFromOtherSources Float

  detailedBudgets DetailedBudget[]
  sponsorships   Sponsorship[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DetailedBudget {
  id                   String   @id @default(uuid())
  sno                  Int
  description          String
  quantity             Int
  costPerUnit          Float
  totalAmount          Float

  callForProposalId String
  callForProposal   CallForProposal @relation(fields: [callForProposalId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sponsorship {
  id                   String   @id @default(uuid())
  sponsorshipDetails   String
  associatingAgencies  String?

  callForProposalId String
  callForProposal   CallForProposal @relation(fields: [callForProposalId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
